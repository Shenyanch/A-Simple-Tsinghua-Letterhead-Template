%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/SHENYA~1/AppData/Local/Temp/magick-41405CshZ0kYr3XI)
%%CreationDate: (2021-01-18T09:11:37+00:00)
%%BoundingBox: -0 -0 11 18
%%HiResBoundingBox: 0 0 10.5 18
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 11 18
userdict begin
DisplayImage
0 0
10.5 17.5
12
15 25
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1F1F1C9C9C9858585FFFFFFFFFFFFF4F4F4
7D7D7D5B5B5B5F5F5FE0E0E0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC8C8C8565656434343FFFFFF
FFFFFF848484969696E2E2E2CBCBCB626262FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0F0F0
5E5E5EFFFFFFFFFFFF7F7F7FADADADFFFFFFF2F2F2535353FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFE6E6E65D5D5DFFFFFFFFFFFFEFEFEFF4F4F4FFFFFFC4C4C4737373FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFE6E6E65D5D5DFFFFFFFFFFFFFFFFFFFFFFFFC6C6C6747474EDEDEDFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE6E6E65D5D5DFFFFFFFFFFFFFFFFFFC7C7C7747474EDEDED
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEF5D5D5DFFFFFFFFFFFFCBCBCB7E7E7E
F6F6F6FFFFFFBFBFBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC8C8C85858582B2B2B616161F0F0F0
8C8C8C484848656565565656494949FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4F4F4DCDCDBE5E5E5
DADADAFEFEFEFBFBFBE0E0E0DADADADCDCDCF0F0F0FFFFFFFFFFFFF6F6F6F6F6F6F6F6F6F9F9F9
FEFDFEFDFDFDFDFDFDF6F6F6F9F9F9FDFDFDFDFDFDFDFDFDFBFBFBF6F6F6FFFFFF575757575757
5858615C5A675C5A655A5858575757575757575757575757575757575757575757575757FFFFFF
F6F6F6F6F6F6F6F6F6F4F3F5F2F3F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6
F6F6F6FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFEFBFCFFFDFDFEFAFBFFFFFFFFDFDDDF
E1E0E2FEFEFFFBFBFEFBFBFEFAFBFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFEFCFDFFFFFFFFFEFEFF
E6E6E9232121B0AFAFFFFFFFFBFBFFFDFDFFFDFEFFFFFFFFFFFFFFFEFDFFFBFBFFFBFBFEFCFEFF
FFFFFFFFFFFFAEADB30E0F0FB9BAB9FFFFFFFBFBFFFDFDFFFEFEFFFFFFFFFFFFFFFFFEFFFCFCFE
FCFDFFFFFFFFFFFFFFB1B1B59B9BA3868686AAAAA9FFFFFFFDFCFEFBFBFEFDFDFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFF2F2F3706F7BF0F0F5979796B5B5B5FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFADACB03F3E458C8D8D4747475E5E5EB5B5B5FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE9E9E9A2A2A1A6A6A6545454707070
C7C7C7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7C7C7
525252737373D0D0D0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF989898888888868686ADADADFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
