%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (C:/Users/SHENYA~1/AppData/Local/Temp/magick-41404dvqHryP2jjB)
%%CreationDate: (2021-01-18T09:11:37+00:00)
%%BoundingBox: -0 -0 23 12
%%HiResBoundingBox: 0 0 23.3211 12
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 23 12
userdict begin
DisplayImage
0 0
23.3211 11.9937
12
35 18
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8F8F8F0C0C0C141414141414141414141414
141414141414141414141414141414141414141414141414141414141414141414141414141414
141414141414141414141414141414141414141414141414FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFCFCFC767676B7B7B7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFCFDFCFCFDFCFFFFFFE9E9EA757574
D6D6D6FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF1F1F1F2F2F2FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFEFDFEFCFCFDFCFFFFFFCFCFD0727272F1F1F1FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFDFDFDC1C1C1525151515151C7C7C7FEFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFDFCFDFDFFFFFFB6B7B5757674FFFFFFFDFEFDFFFFFFFFFFFEFDFEFDFDFEFEFFFFFFFFFFFF
F3F3F2454744F2F3F3F0F0F04C4C4CFAFAF9FEFFFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FDFEFDFDFEFEFFFFFFFFFFFFFEFEFDFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFEFEFFFFFF9D9E9B
8D8C8BFFFFFFFCFDFDFFFFFFFEFEFDFCFEFDFCFDFBFDFEFEFEFEFEF9FAF9CBCDCAFFFFFFE7E7E8
535355F9F9F9FEFFFEFCFDFBFEFEFEFFFFFFFFFFFFFFFFFEFEFDFCFDFDFDFDFDFCFDFEFEFEFEFE
FCFDFCFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFEFFFFFBFBFB858584B3B3B2FFFFFFFDFEFFFFFFFD
FCFDFBFDFDFCFCFDFBFDFEFDFDFEFCFDFFFEFFFFFFE8E9E770706ECDCBCBFEFEFEFFFFFFFEFDFC
FCFDFDFFFFFFFFFFFFFFFEFDFCFEFDFFFFFFFFFFFFFFFFFFFFFFFFFDFEFEFFFFFFFFFFFFFFFFFF
FFFFFFFEFEFEFFFFFFF2F2F26C6C6CD6D7D5FFFFFFFFFFFFFFFEFDFCFDFCFEFFFFFFFFFFFFFFFF
FDFDFBFEFFFEE8EAEA737875CDCFCDFFFFFFFCFDFDFFFFFFFEFDFCFCFDFDFFFFFFFFFFFFFFFEFD
FCFCFBFDFEFFFFFFFFEBEBEBB0B0B0FEFFFEFFFFFFFEFEFE8F908FA8AAA8FFFFFFFFFFFFE5E5E5
5B5B5BF6F7F5FFFFFFFFFFFFFFFFFFFEFEFCFCFDFCFCFDFCFEFEFEFFFFFEF7F7F65F635FAAADAE
DEDEDE737272FAFAF9FDFEFDFDFDFDFFFFFFFDFDFCF2F3F2FEFFFFFEFDFCFEFFFFA3A5A1404040
4D4C4DFFFFFFFFFFFFABABAB7A7A7A6D6D6DEBEBEBFFFFFFC7C7C76E6E6EFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFDFD5F5F5E5F5F5F555555616161FEFEFEFFFFFF
FFFFFFFFFFFFE2E2E2636363FFFFFFFFFFFFFFFFFFEDEDECB0B0B05D5C5CFFFFFFFFFFFFC2C2C2
FFFFFF717171BEBEBEFFFFFFA3A4A38F918FFFFFFFFFFFFFD9D9D9767676737374747474767676
858585FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDEDEDE535353
FFFFFFFFFFFFFFFFFFFFFFFFD0D0D05D5D5DFFFFFFFFFFFFFFFFFFFFFFFFB6B6B67F7F7FFFFFFF
7F7F7FB1B2B2FFFFFFFFFFFFE9E9E94242428080806F6F6F555555A1A1A1818181FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD8D8D85353534848481C1C1C535353636363F8F8F8FFFFFF
CBCBCB5D5D5DFFFFFFFFFFFFFFFFFFFFFFFFF1F1F1666666EAEAEA656565D1D1D1FFFFFFFFFFFF
FFFFFF777777CCCCCCB5B5B5929292EAEAEA545454FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFF9F9F9E6E6E6C8C8C84D4D4DE6E6E6E8E8E8FEFEFEFFFFFFCBCBCB5D5D5DFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF999999838383757575E4E4E4FFFFFFFFFFFFFFFFFF757575C7C7C7ABABAB
8F8F8FE1E1E1616161FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE2E2E2
555555FFFFFFFFFFFFFFFFFFFFFFFFD3D3D3616161FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD4D4D4
323232777777F7F7F7FFFFFFFFFFFFF1F1F15050509E9E9EA3A3A3656565D2D2D23E3E3EEAEAEA
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9F9F9DEDEDEFFFFFFFFFFFFFFFFFF
E2E2E29E9E9E3E3E3ECBCBCBFFFFFFFFFFFFFFFFFFFFFFFFFBFBFB4F4F4F757575FFFFFFFFFFFF
FFFFFFD3D3D35B5B5B767676C4C4C45C5C5CCACACA5B5B5BBCBCBCFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA4A4A45D5D5D5B5B5B5D5D5D
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCCCCCCD3D3D3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
